// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: component.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CEmpty) Reset() {
	*x = CEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_component_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEmpty) ProtoMessage() {}

func (x *CEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_component_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEmpty.ProtoReflect.Descriptor instead.
func (*CEmpty) Descriptor() ([]byte, []int) {
	return file_component_proto_rawDescGZIP(), []int{0}
}

type FetchConfigArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Version   string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *FetchConfigArgs) Reset() {
	*x = FetchConfigArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_component_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchConfigArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConfigArgs) ProtoMessage() {}

func (x *FetchConfigArgs) ProtoReflect() protoreflect.Message {
	mi := &file_component_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConfigArgs.ProtoReflect.Descriptor instead.
func (*FetchConfigArgs) Descriptor() ([]byte, []int) {
	return file_component_proto_rawDescGZIP(), []int{1}
}

func (x *FetchConfigArgs) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FetchConfigArgs) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FetchConfigArgs) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type FetchConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FetchConfigReply) Reset() {
	*x = FetchConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_component_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConfigReply) ProtoMessage() {}

func (x *FetchConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_component_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConfigReply.ProtoReflect.Descriptor instead.
func (*FetchConfigReply) Descriptor() ([]byte, []int) {
	return file_component_proto_rawDescGZIP(), []int{2}
}

func (x *FetchConfigReply) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_component_proto protoreflect.FileDescriptor

var file_component_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x08, 0x0a, 0x06, 0x43, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x5b, 0x0a, 0x0f, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x28, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x7a, 0x0a, 0x09, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x43, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x0b, 0x48, 0x02, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_component_proto_rawDescOnce sync.Once
	file_component_proto_rawDescData = file_component_proto_rawDesc
)

func file_component_proto_rawDescGZIP() []byte {
	file_component_proto_rawDescOnce.Do(func() {
		file_component_proto_rawDescData = protoimpl.X.CompressGZIP(file_component_proto_rawDescData)
	})
	return file_component_proto_rawDescData
}

var file_component_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_component_proto_goTypes = []interface{}{
	(*CEmpty)(nil),           // 0: proto.CEmpty
	(*FetchConfigArgs)(nil),  // 1: proto.FetchConfigArgs
	(*FetchConfigReply)(nil), // 2: proto.FetchConfigReply
}
var file_component_proto_depIdxs = []int32{
	1, // 0: proto.Component.FetchConfig:input_type -> proto.FetchConfigArgs
	0, // 1: proto.Component.CreateFactory:input_type -> proto.CEmpty
	2, // 2: proto.Component.FetchConfig:output_type -> proto.FetchConfigReply
	0, // 3: proto.Component.CreateFactory:output_type -> proto.CEmpty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_component_proto_init() }
func file_component_proto_init() {
	if File_component_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_component_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_component_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchConfigArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_component_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_component_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_component_proto_goTypes,
		DependencyIndexes: file_component_proto_depIdxs,
		MessageInfos:      file_component_proto_msgTypes,
	}.Build()
	File_component_proto = out.File
	file_component_proto_rawDesc = nil
	file_component_proto_goTypes = nil
	file_component_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ComponentClient is the client API for Component service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ComponentClient interface {
	FetchConfig(ctx context.Context, in *FetchConfigArgs, opts ...grpc.CallOption) (*FetchConfigReply, error)
	CreateFactory(ctx context.Context, in *CEmpty, opts ...grpc.CallOption) (*CEmpty, error)
}

type componentClient struct {
	cc grpc.ClientConnInterface
}

func NewComponentClient(cc grpc.ClientConnInterface) ComponentClient {
	return &componentClient{cc}
}

func (c *componentClient) FetchConfig(ctx context.Context, in *FetchConfigArgs, opts ...grpc.CallOption) (*FetchConfigReply, error) {
	out := new(FetchConfigReply)
	err := c.cc.Invoke(ctx, "/proto.Component/FetchConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *componentClient) CreateFactory(ctx context.Context, in *CEmpty, opts ...grpc.CallOption) (*CEmpty, error) {
	out := new(CEmpty)
	err := c.cc.Invoke(ctx, "/proto.Component/CreateFactory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ComponentServer is the server API for Component service.
type ComponentServer interface {
	FetchConfig(context.Context, *FetchConfigArgs) (*FetchConfigReply, error)
	CreateFactory(context.Context, *CEmpty) (*CEmpty, error)
}

// UnimplementedComponentServer can be embedded to have forward compatible implementations.
type UnimplementedComponentServer struct {
}

func (*UnimplementedComponentServer) FetchConfig(context.Context, *FetchConfigArgs) (*FetchConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchConfig not implemented")
}
func (*UnimplementedComponentServer) CreateFactory(context.Context, *CEmpty) (*CEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFactory not implemented")
}

func RegisterComponentServer(s *grpc.Server, srv ComponentServer) {
	s.RegisterService(&_Component_serviceDesc, srv)
}

func _Component_FetchConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchConfigArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComponentServer).FetchConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Component/FetchConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComponentServer).FetchConfig(ctx, req.(*FetchConfigArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Component_CreateFactory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CEmpty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ComponentServer).CreateFactory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Component/CreateFactory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ComponentServer).CreateFactory(ctx, req.(*CEmpty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Component_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Component",
	HandlerType: (*ComponentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchConfig",
			Handler:    _Component_FetchConfig_Handler,
		},
		{
			MethodName: "CreateFactory",
			Handler:    _Component_CreateFactory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "component.proto",
}
